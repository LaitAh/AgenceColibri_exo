<?php

namespace Exo\Models;

use Exo\Utils\Database;
use PDO;

/**
 * The Contact class is a Model. That means that it represents the table `contact` of the database
 */
class Contact extends CoreModel {

  private $subject;
  private $message;

  /**
   * Method for inserting the contact request in the DB
   *
   * @return void
   */
  public function insertInDB()
  {
    // Retrieval of the PDO object (representing the connection to the DB)
    $pdo = Database::getPDO();

    // Writting the query to defined the named parameters for the values concerned
    $sql = "INSERT INTO `contact` (lastname, firstname, email, subject, message) VALUES (:lastname, :firstname, :email, :subject, :message)";

    // Ask PDO to prepare the query to avoid problems with special characters and SQL injections
    $query = $pdo->prepare($sql);
    // Associating values with named parameters (of type string)
    $query->bindValue(':lastname', $this->lastname, PDO::PARAM_STR);
    $query->bindValue(':firstname', $this->firstname, PDO::PARAM_STR);
    $query->bindValue(':email', $this->email, PDO::PARAM_STR);
    $query->bindValue(':subject', $this->subject, PDO::PARAM_STR);
    $query->bindValue(':message', $this->message, PDO::PARAM_STR);
    // Executing the insert query
    $query->execute();

    // $query->rowCount() contains the number of rows affected
    if ($query->rowCount() > 0) {  // If at least one line added
      // Get the auto-incremented id generated by the Relational DataBase Management System
      $this->id = $pdo->lastInsertId();
      return true;
    }
    // If we get here, it's because something went wrong
    return false;
  }

  /**
   * Get the value of subject
   */ 
  public function getSubject()
  {
    return $this->subject;
  }

  /**
   * Set the value of subject
   *
   * @return  self
   */ 
  public function setSubject($subject)
  {
    $this->subject = $subject;

    return $this;
  }

  /**
   * Get the value of message
   */ 
  public function getMessage()
  {
    return $this->message;
  }

  /**
   * Set the value of message
   *
   * @return  self
   */ 
  public function setMessage($message)
  {
    $this->message = $message;

    return $this;
  }
}